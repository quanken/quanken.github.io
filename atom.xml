<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[quanken]]></title>
  <subtitle><![CDATA[just coding....]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://quanken.github.io/"/>
  <updated>2016-01-05T05:49:01.000Z</updated>
  <id>http://quanken.github.io/</id>
  
  <author>
    <name><![CDATA[Zhenquan.Liang]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Flush DNS Cache]]></title>
    <link href="http://quanken.github.io/2016/01/05/Flush-DNS-Cache/"/>
    <id>http://quanken.github.io/2016/01/05/Flush-DNS-Cache/</id>
    <published>2016-01-05T05:43:39.000Z</published>
    <updated>2016-01-05T05:49:01.000Z</updated>
    <content type="html"><![CDATA[<p>当DNS缓存了一些错误的地址，干扰域名的正常解析，可以强制刷新DNS数据。</p>
<a id="more"></a>
<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><p>Windows 的 DNS 刷新命令为</p>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="winutils">ipconfig</span> /flushdns</span><br></pre></td></tr></table></figure>
<h1 id="Mac_OSX"><a href="#Mac_OSX" class="headerlink" title="Mac OSX"></a>Mac OSX</h1><p>首先把可能受干扰的应用给关闭，然后打开 <code>Terminal</code> 执行：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">dscacheutil</span> -flushcache</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>当DNS缓存了一些错误的地址，干扰域名的正常解析，可以强制刷新DNS数据。</p>]]>
    
    </summary>
    
      <category term="macosx" scheme="http://quanken.github.io/tags/macosx/"/>
    
      <category term="windows" scheme="http://quanken.github.io/tags/windows/"/>
    
      <category term="command" scheme="http://quanken.github.io/categories/command/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CURL HTTP Usage]]></title>
    <link href="http://quanken.github.io/2015/12/30/curl-practice/"/>
    <id>http://quanken.github.io/2015/12/30/curl-practice/</id>
    <published>2015-12-30T10:49:05.000Z</published>
    <updated>2015-12-30T11:33:08.000Z</updated>
    <content type="html"><![CDATA[<p>curl 除了是一个强大的类库之外，curl工具本身也是一个非常强大的、方便开发人员使用的工具。</p>
<a id="more"></a>
<h1 id="CURL__u4ECB_u7ECD"><a href="#CURL__u4ECB_u7ECD" class="headerlink" title="CURL 介绍"></a>CURL 介绍</h1><p><a href="http://curl.haxx.se/" target="_blank" rel="external">CURL</a> 是一个C编写的，可以完成各种网络通信功能的类库和工具。</p>
<p>以下介绍来自官网：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="keyword">is</span> <span class="keyword">an</span> <span class="keyword">open</span> <span class="keyword">source</span> <span class="keyword">command</span> <span class="built_in">line</span> tool <span class="built_in">and</span> library <span class="keyword">for</span> transferring data with URL <span class="keyword">syntax</span>, supporting DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMTP, SMTPS, Telnet <span class="built_in">and</span> TFTP. curl supports SSL certificates, HTTP POST, HTTP PUT, FTP uploading, HTTP form based upload, proxies, HTTP/<span class="number">2</span>, cookies, user+password authentication (Basic, Plain, Digest, CRAM-MD5, NTLM, Negotiate <span class="built_in">and</span> Kerberos), <span class="keyword">file</span> transfer resume, proxy tunneling <span class="built_in">and</span> more.</span><br></pre></td></tr></table></figure>
<h1 id="CURL__u529F_u80FD"><a href="#CURL__u529F_u80FD" class="headerlink" title="CURL 功能"></a>CURL 功能</h1><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line">$ curl --help</span><br><span class="line">Usage: curl [options...] &lt;url&gt;</span><br><span class="line">Options: (H) means HTTP/HTTPS only, (F) means FTP only</span><br><span class="line">     -<span class="ruby">-anyauth       <span class="constant">Pick</span> <span class="string">"any"</span> authentication method (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby">a, --append        <span class="constant">Append</span> to target file <span class="keyword">when</span> uploading (<span class="constant">F</span>/<span class="constant">SFTP</span>)</span><br><span class="line"></span>     -<span class="ruby">-basic         <span class="constant">Use</span> <span class="constant">HTTP</span> <span class="constant">Basic</span> <span class="constant">Authentication</span> (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-cacert <span class="constant">FILE</span>   <span class="constant">CA</span> certificate to verify peer against (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-capath <span class="constant">DIR</span>    <span class="constant">CA</span> directory to verify peer against (<span class="constant">SSL</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">E</span>, --cert <span class="constant">CERT</span>[<span class="symbol">:PASSWD</span>]  <span class="constant">Client</span> certificate file <span class="keyword">and</span> password (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-cert-status   <span class="constant">Verify</span> the status of the server certificate (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-cert-type <span class="constant">TYPE</span>  <span class="constant">Certificate</span> file type (<span class="constant">DER</span>/<span class="constant">PEM</span>/<span class="constant">ENG</span>) (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-ciphers <span class="constant">LIST</span>  <span class="constant">SSL</span> ciphers to use (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-compressed    <span class="constant">Request</span> compressed response (using deflate <span class="keyword">or</span> gzip)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">K</span>, --config <span class="constant">FILE</span>   <span class="constant">Read</span> config from <span class="constant">FILE</span></span><br><span class="line"></span>     -<span class="ruby">-connect-timeout <span class="constant">SECONDS</span>  <span class="constant">Maximum</span> time allowed <span class="keyword">for</span> connection</span><br><span class="line"></span> -<span class="ruby"><span class="constant">C</span>, --continue-at <span class="constant">OFFSET</span>  <span class="constant">Resumed</span> transfer <span class="constant">OFFSET</span></span><br><span class="line"></span> -<span class="ruby">b, --cookie <span class="constant">STRING</span>/<span class="constant">FILE</span>  <span class="constant">Read</span> cookies from <span class="constant">STRING</span>/<span class="constant">FILE</span> (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby">c, --cookie-jar <span class="constant">FILE</span>  <span class="constant">Write</span> cookies to <span class="constant">FILE</span> after operation (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-create-dirs   <span class="constant">Create</span> necessary local directory hierarchy</span><br><span class="line"></span>     -<span class="ruby">-crlf          <span class="constant">Convert</span> <span class="constant">LF</span> to <span class="constant">CRLF</span> <span class="keyword">in</span> upload</span><br><span class="line"></span>     -<span class="ruby">-crlfile <span class="constant">FILE</span>  <span class="constant">Get</span> a <span class="constant">CRL</span> list <span class="keyword">in</span> <span class="constant">PEM</span> format from the given file</span><br><span class="line"></span> -<span class="ruby">d, --data <span class="constant">DATA</span>     <span class="constant">HTTP</span> <span class="constant">POST</span> data (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-data-raw <span class="constant">DATA</span>  <span class="constant">HTTP</span> <span class="constant">POST</span> data, <span class="string">'@'</span> allowed (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-data-ascii <span class="constant">DATA</span>  <span class="constant">HTTP</span> <span class="constant">POST</span> <span class="constant">ASCII</span> data (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-data-binary <span class="constant">DATA</span>  <span class="constant">HTTP</span> <span class="constant">POST</span> binary data (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-data-urlencode <span class="constant">DATA</span>  <span class="constant">HTTP</span> <span class="constant">POST</span> data url encoded (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-delegation <span class="constant">STRING</span>  <span class="constant">GSS</span>-<span class="constant">API</span> delegation permission</span><br><span class="line"></span>     -<span class="ruby">-digest        <span class="constant">Use</span> <span class="constant">HTTP</span> <span class="constant">Digest</span> <span class="constant">Authentication</span> (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-disable-eprt  <span class="constant">Inhibit</span> using <span class="constant">EPRT</span> <span class="keyword">or</span> <span class="constant">LPRT</span> (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-disable-epsv  <span class="constant">Inhibit</span> using <span class="constant">EPSV</span> (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-dns-servers   <span class="constant">DNS</span> server addrs to <span class="symbol">use:</span> <span class="number">1.1</span>.<span class="number">1.1</span>;<span class="number">2.2</span>.<span class="number">2.2</span></span><br><span class="line"></span>     -<span class="ruby">-dns-interface  <span class="constant">Interface</span> to use <span class="keyword">for</span> <span class="constant">DNS</span> requests</span><br><span class="line"></span>     -<span class="ruby">-dns-ipv4-addr  <span class="constant">IPv4</span> address to use <span class="keyword">for</span> <span class="constant">DNS</span> requests, dot notation</span><br><span class="line"></span>     -<span class="ruby">-dns-ipv6-addr  <span class="constant">IPv6</span> address to use <span class="keyword">for</span> <span class="constant">DNS</span> requests, dot notation</span><br><span class="line"></span> -<span class="ruby"><span class="constant">D</span>, --dump-header <span class="constant">FILE</span>  <span class="constant">Write</span> the headers to <span class="constant">FILE</span></span><br><span class="line"></span>     -<span class="ruby">-egd-file <span class="constant">FILE</span>  <span class="constant">EGD</span> socket path <span class="keyword">for</span> random data (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-engine <span class="constant">ENGINE</span>  <span class="constant">Crypto</span> engine (use <span class="string">"--engine list"</span> <span class="keyword">for</span> list) (<span class="constant">SSL</span>)</span><br><span class="line"></span> -<span class="ruby">f, --fail          <span class="constant">Fail</span> silently (no output at all) on <span class="constant">HTTP</span> errors (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-<span class="keyword">false</span>-start   <span class="constant">Enable</span> <span class="constant">TLS</span> <span class="constant">False</span> <span class="constant">Start</span>.</span><br><span class="line"></span> -<span class="ruby"><span class="constant">F</span>, --form <span class="constant">CONTENT</span>  <span class="constant">Specify</span> <span class="constant">HTTP</span> multipart <span class="constant">POST</span> data (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-form-string <span class="constant">STRING</span>  <span class="constant">Specify</span> <span class="constant">HTTP</span> multipart <span class="constant">POST</span> data (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-ftp-account <span class="constant">DATA</span>  <span class="constant">Account</span> data string (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-ftp-alternative-to-user <span class="constant">COMMAND</span>  <span class="constant">String</span> to replace <span class="string">"USER [name]"</span> (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-ftp-create-dirs  <span class="constant">Create</span> the remote dirs <span class="keyword">if</span> <span class="keyword">not</span> present (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-ftp-method [<span class="constant">MULTICWD</span>/<span class="constant">NOCWD</span>/<span class="constant">SINGLECWD</span>]  <span class="constant">Control</span> <span class="constant">CWD</span> usage (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-ftp-pasv      <span class="constant">Use</span> <span class="constant">PASV</span>/<span class="constant">EPSV</span> instead of <span class="constant">PORT</span> (<span class="constant">F</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">P</span>, --ftp-port <span class="constant">ADR</span>  <span class="constant">Use</span> <span class="constant">PORT</span> with given address instead of <span class="constant">PASV</span> (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-ftp-skip-pasv-ip  <span class="constant">Skip</span> the <span class="constant">IP</span> address <span class="keyword">for</span> <span class="constant">PASV</span> (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-ftp-pret      <span class="constant">Send</span> <span class="constant">PRET</span> before <span class="constant">PASV</span> (<span class="keyword">for</span> drftpd) (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-ftp-ssl-ccc   <span class="constant">Send</span> <span class="constant">CCC</span> after authenticating (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-ftp-ssl-ccc-mode <span class="constant">ACTIVE</span>/<span class="constant">PASSIVE</span>  <span class="constant">Set</span> <span class="constant">CCC</span> mode (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-ftp-ssl-control  <span class="constant">Require</span> <span class="constant">SSL</span>/<span class="constant">TLS</span> <span class="keyword">for</span> <span class="constant">FTP</span> login, clear <span class="keyword">for</span> transfer (<span class="constant">F</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">G</span>, --get           <span class="constant">Send</span> the -d data with a <span class="constant">HTTP</span> <span class="constant">GET</span> (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby">g, --globoff       <span class="constant">Disable</span> <span class="constant">URL</span> sequences <span class="keyword">and</span> ranges using &#123;&#125; <span class="keyword">and</span> []</span><br><span class="line"></span> -<span class="ruby"><span class="constant">H</span>, --header <span class="constant">LINE</span>   <span class="constant">Pass</span> custom header <span class="constant">LINE</span> to server (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">I</span>, --head          <span class="constant">Show</span> document info only</span><br><span class="line"></span> -<span class="ruby">h, --help          <span class="constant">This</span> help text</span><br><span class="line"></span>     -<span class="ruby">-hostpubmd5 <span class="constant">MD5</span>  <span class="constant">Hex</span>-encoded <span class="constant">MD5</span> string of the host public key. (<span class="constant">SSH</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="number">0</span>, --http1.<span class="number">0</span>       <span class="constant">Use</span> <span class="constant">HTTP</span> <span class="number">1.0</span> (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-http1.<span class="number">1</span>       <span class="constant">Use</span> <span class="constant">HTTP</span> <span class="number">1.1</span> (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-http2         <span class="constant">Use</span> <span class="constant">HTTP</span> <span class="number">2</span> (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-ignore-content-length  <span class="constant">Ignore</span> the <span class="constant">HTTP</span> <span class="constant">Content</span>-<span class="constant">Length</span> header</span><br><span class="line"></span> -<span class="ruby">i, --<span class="keyword">include</span>       <span class="constant">Include</span> protocol headers <span class="keyword">in</span> the output (<span class="constant">H</span>/<span class="constant">F</span>)</span><br><span class="line"></span> -<span class="ruby">k, --insecure      <span class="constant">Allow</span> connections to <span class="constant">SSL</span> sites without certs (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-interface <span class="constant">INTERFACE</span>  <span class="constant">Use</span> network <span class="constant">INTERFACE</span> (<span class="keyword">or</span> address)</span><br><span class="line"></span> -<span class="ruby"><span class="number">4</span>, --ipv4          <span class="constant">Resolve</span> name to <span class="constant">IPv4</span> address</span><br><span class="line"></span> -<span class="ruby"><span class="number">6</span>, --ipv6          <span class="constant">Resolve</span> name to <span class="constant">IPv6</span> address</span><br><span class="line"></span> -<span class="ruby">j, --junk-session-cookies  <span class="constant">Ignore</span> session cookies read from file (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-keepalive-time <span class="constant">SECONDS</span>  <span class="constant">Wait</span> <span class="constant">SECONDS</span> between keepalive probes</span><br><span class="line"></span>     -<span class="ruby">-key <span class="constant">KEY</span>       <span class="constant">Private</span> key file name (<span class="constant">SSL</span>/<span class="constant">SSH</span>)</span><br><span class="line"></span>     -<span class="ruby">-key-type <span class="constant">TYPE</span>  <span class="constant">Private</span> key file type (<span class="constant">DER</span>/<span class="constant">PEM</span>/<span class="constant">ENG</span>) (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-krb <span class="constant">LEVEL</span>     <span class="constant">Enable</span> <span class="constant">Kerberos</span> with security <span class="constant">LEVEL</span> (<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-libcurl <span class="constant">FILE</span>  <span class="constant">Dump</span> libcurl equivalent code of this command line</span><br><span class="line"></span>     -<span class="ruby">-limit-rate <span class="constant">RATE</span>  <span class="constant">Limit</span> transfer speed to <span class="constant">RATE</span></span><br><span class="line"></span> -<span class="ruby">l, --list-only     <span class="constant">List</span> only mode (<span class="constant">F</span>/<span class="constant">POP3</span>)</span><br><span class="line"></span>     -<span class="ruby">-local-port <span class="constant">RANGE</span>  <span class="constant">Force</span> use of <span class="constant">RANGE</span> <span class="keyword">for</span> local port numbers</span><br><span class="line"></span> -<span class="ruby"><span class="constant">L</span>, --location      <span class="constant">Follow</span> redirects (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-location-trusted  <span class="constant">Like</span> <span class="string">'--location'</span>, <span class="keyword">and</span> send auth to other hosts (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-login-options <span class="constant">OPTIONS</span>  <span class="constant">Server</span> login options (<span class="constant">IMAP</span>, <span class="constant">POP3</span>, <span class="constant">SMTP</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">M</span>, --manual        <span class="constant">Display</span> the full manual</span><br><span class="line"></span>     -<span class="ruby">-mail-from <span class="constant">FROM</span>  <span class="constant">Mail</span> from this address (<span class="constant">SMTP</span>)</span><br><span class="line"></span>     -<span class="ruby">-mail-rcpt <span class="constant">TO</span>  <span class="constant">Mail</span> to this/these addresses (<span class="constant">SMTP</span>)</span><br><span class="line"></span>     -<span class="ruby">-mail-auth <span class="constant">AUTH</span>  <span class="constant">Originator</span> address of the original email (<span class="constant">SMTP</span>)</span><br><span class="line"></span>     -<span class="ruby">-max-filesize <span class="constant">BYTES</span>  <span class="constant">Maximum</span> file size to download (<span class="constant">H</span>/<span class="constant">F</span>)</span><br><span class="line"></span>     -<span class="ruby">-max-redirs <span class="constant">NUM</span>  <span class="constant">Maximum</span> number of redirects allowed (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby">m, --max-time <span class="constant">SECONDS</span>  <span class="constant">Maximum</span> time allowed <span class="keyword">for</span> the transfer</span><br><span class="line"></span>     -<span class="ruby">-metalink      <span class="constant">Process</span> given <span class="constant">URLs</span> as metalink <span class="constant">XML</span> file</span><br><span class="line"></span>     -<span class="ruby">-negotiate     <span class="constant">Use</span> <span class="constant">HTTP</span> <span class="constant">Negotiate</span> (<span class="constant">SPNEGO</span>) authentication (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby">n, --netrc         <span class="constant">Must</span> read .netrc <span class="keyword">for</span> user name <span class="keyword">and</span> password</span><br><span class="line"></span>     -<span class="ruby">-netrc-optional  <span class="constant">Use</span> either .netrc <span class="keyword">or</span> <span class="constant">URL</span>; overrides -n</span><br><span class="line"></span>     -<span class="ruby">-netrc-file <span class="constant">FILE</span>  <span class="constant">Specify</span> <span class="constant">FILE</span> <span class="keyword">for</span> netrc</span><br><span class="line"></span> -<span class="ruby"><span class="symbol">:</span>, --<span class="keyword">next</span>          <span class="constant">Allows</span> the following <span class="constant">URL</span> to use a separate set of options</span><br><span class="line"></span>     -<span class="ruby">-no-alpn       <span class="constant">Disable</span> the <span class="constant">ALPN</span> <span class="constant">TLS</span> extension (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">N</span>, --no-buffer     <span class="constant">Disable</span> buffering of the output stream</span><br><span class="line"></span>     -<span class="ruby">-no-keepalive  <span class="constant">Disable</span> keepalive use on the connection</span><br><span class="line"></span>     -<span class="ruby">-no-npn        <span class="constant">Disable</span> the <span class="constant">NPN</span> <span class="constant">TLS</span> extension (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-no-sessionid  <span class="constant">Disable</span> <span class="constant">SSL</span> session-<span class="constant">ID</span> reusing (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-noproxy       <span class="constant">List</span> of hosts which <span class="keyword">do</span> <span class="keyword">not</span> use proxy</span><br><span class="line"></span>     -<span class="ruby">-ntlm          <span class="constant">Use</span> <span class="constant">HTTP</span> <span class="constant">NTLM</span> authentication (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-oauth2-bearer <span class="constant">TOKEN</span>  <span class="constant">OAuth</span> <span class="number">2</span> <span class="constant">Bearer</span> <span class="constant">Token</span> (<span class="constant">IMAP</span>, <span class="constant">POP3</span>, <span class="constant">SMTP</span>)</span><br><span class="line"></span> -<span class="ruby">o, --output <span class="constant">FILE</span>   <span class="constant">Write</span> to <span class="constant">FILE</span> instead of stdout</span><br><span class="line"></span>     -<span class="ruby">-pass <span class="constant">PASS</span>     <span class="constant">Pass</span> phrase <span class="keyword">for</span> the private key (<span class="constant">SSL</span>/<span class="constant">SSH</span>)</span><br><span class="line"></span>     -<span class="ruby">-path-as-is    <span class="constant">Do</span> <span class="keyword">not</span> squash .. sequences <span class="keyword">in</span> <span class="constant">URL</span> path</span><br><span class="line"></span>     -<span class="ruby">-pinnedpubkey <span class="constant">FILE</span>  <span class="constant">Public</span> key (<span class="constant">PEM</span>/<span class="constant">DER</span>) to verify peer against (<span class="constant">OpenSSL</span>/<span class="constant">GnuTLS</span>/<span class="constant">NSS</span>/wolfSSL/<span class="constant">CyaSSL</span>/<span class="constant">GSKit</span> only)</span><br><span class="line"></span>     -<span class="ruby">-post301       <span class="constant">Do</span> <span class="keyword">not</span> switch to <span class="constant">GET</span> after following a <span class="number">301</span> redirect (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-post302       <span class="constant">Do</span> <span class="keyword">not</span> switch to <span class="constant">GET</span> after following a <span class="number">302</span> redirect (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-post303       <span class="constant">Do</span> <span class="keyword">not</span> switch to <span class="constant">GET</span> after following a <span class="number">303</span> redirect (<span class="constant">H</span>)</span><br><span class="line"></span><span class="comment"> -#, --progress-bar  Display transfer progress as a progress bar</span></span><br><span class="line">     -<span class="ruby">-proto <span class="constant">PROTOCOLS</span>  <span class="constant">Enable</span>/disable <span class="constant">PROTOCOLS</span></span><br><span class="line"></span>     -<span class="ruby">-proto-redir <span class="constant">PROTOCOLS</span>  <span class="constant">Enable</span>/disable <span class="constant">PROTOCOLS</span> on redirect</span><br><span class="line"></span> -<span class="ruby">x, --proxy [<span class="constant">PROTOCOL</span><span class="symbol">://</span>]<span class="constant">HOST</span>[<span class="symbol">:PORT</span>]  <span class="constant">Use</span> proxy on given port</span><br><span class="line"></span>     -<span class="ruby">-proxy-anyauth  <span class="constant">Pick</span> <span class="string">"any"</span> proxy authentication method (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-proxy-basic   <span class="constant">Use</span> <span class="constant">Basic</span> authentication on the proxy (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-proxy-digest  <span class="constant">Use</span> <span class="constant">Digest</span> authentication on the proxy (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-proxy-negotiate  <span class="constant">Use</span> <span class="constant">HTTP</span> <span class="constant">Negotiate</span> (<span class="constant">SPNEGO</span>) authentication on the proxy (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-proxy-ntlm    <span class="constant">Use</span> <span class="constant">NTLM</span> authentication on the proxy (<span class="constant">H</span>)</span><br><span class="line"></span>     -<span class="ruby">-proxy-service-name <span class="constant">NAME</span>  <span class="constant">SPNEGO</span> proxy service name</span><br><span class="line"></span>     -<span class="ruby">-service-name <span class="constant">NAME</span>  <span class="constant">SPNEGO</span> service name</span><br><span class="line"></span> -<span class="ruby"><span class="constant">U</span>, --proxy-user <span class="constant">USER</span>[<span class="symbol">:PASSWORD</span>]  <span class="constant">Proxy</span> user <span class="keyword">and</span> password</span><br><span class="line"></span>     -<span class="ruby">-proxy1.<span class="number">0</span> <span class="constant">HOST</span>[<span class="symbol">:PORT</span>]  <span class="constant">Use</span> <span class="constant">HTTP</span>/<span class="number">1.0</span> proxy on given port</span><br><span class="line"></span> -<span class="ruby">p, --proxytunnel   <span class="constant">Operate</span> through a <span class="constant">HTTP</span> proxy tunnel (using <span class="constant">CONNECT</span>)</span><br><span class="line"></span>     -<span class="ruby">-pubkey <span class="constant">KEY</span>    <span class="constant">Public</span> key file name (<span class="constant">SSH</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">Q</span>, --quote <span class="constant">CMD</span>     <span class="constant">Send</span> command(s) to server before transfer (<span class="constant">F</span>/<span class="constant">SFTP</span>)</span><br><span class="line"></span>     -<span class="ruby">-random-file <span class="constant">FILE</span>  <span class="constant">File</span> <span class="keyword">for</span> reading random data from (<span class="constant">SSL</span>)</span><br><span class="line"></span> -<span class="ruby">r, --range <span class="constant">RANGE</span>   <span class="constant">Retrieve</span> only the bytes within <span class="constant">RANGE</span></span><br><span class="line"></span>     -<span class="ruby">-raw           <span class="constant">Do</span> <span class="constant">HTTP</span> <span class="string">"raw"</span>; no transfer decoding (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby">e, --referer       <span class="constant">Referer</span> <span class="constant">URL</span> (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">J</span>, --remote-header-name  <span class="constant">Use</span> the header-provided filename (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">O</span>, --remote-name   <span class="constant">Write</span> output to a file named as the remote file</span><br><span class="line"></span>     -<span class="ruby">-remote-name-all  <span class="constant">Use</span> the remote file name <span class="keyword">for</span> all <span class="constant">URLs</span></span><br><span class="line"></span> -<span class="ruby"><span class="constant">R</span>, --remote-time   <span class="constant">Set</span> the remote file<span class="string">'s time on the local output</span><br><span class="line"></span></span> -<span class="ruby"><span class="string">X, --request COMMAND  Specify request command to use</span><br><span class="line"></span></span>     -<span class="ruby"><span class="string">-resolve HOST:PORT:ADDRESS  Force resolve of HOST:PORT to ADDRESS</span><br><span class="line"></span></span>     -<span class="ruby"><span class="string">-retry NUM   Retry request NUM times if transient problems occur</span><br><span class="line"></span></span>     -<span class="ruby"><span class="string">-retry-delay SECONDS  Wait SECONDS between retries</span><br><span class="line"></span></span>     -<span class="ruby"><span class="string">-retry-max-time SECONDS  Retry only within this period</span><br><span class="line"></span></span>     -<span class="ruby"><span class="string">-sasl-ir       Enable initial response in SASL authentication</span><br><span class="line"></span></span> -<span class="ruby"><span class="string">S, --show-error    Show error. With -s, make curl show errors when they occur</span><br><span class="line"></span></span> -<span class="ruby"><span class="string">s, --silent        Silent mode (don'</span>t output anything)</span><br><span class="line"></span>     -<span class="ruby">-socks4 <span class="constant">HOST</span>[<span class="symbol">:PORT</span>]  <span class="constant">SOCKS4</span> proxy on given host + port</span><br><span class="line"></span>     -<span class="ruby">-socks4a <span class="constant">HOST</span>[<span class="symbol">:PORT</span>]  <span class="constant">SOCKS4a</span> proxy on given host + port</span><br><span class="line"></span>     -<span class="ruby">-socks5 <span class="constant">HOST</span>[<span class="symbol">:PORT</span>]  <span class="constant">SOCKS5</span> proxy on given host + port</span><br><span class="line"></span>     -<span class="ruby">-socks5-hostname <span class="constant">HOST</span>[<span class="symbol">:PORT</span>]  <span class="constant">SOCKS5</span> proxy, pass host name to proxy</span><br><span class="line"></span>     -<span class="ruby">-socks5-gssapi-service <span class="constant">NAME</span>  <span class="constant">SOCKS5</span> proxy service name <span class="keyword">for</span> <span class="constant">GSS</span>-<span class="constant">API</span></span><br><span class="line"></span>     -<span class="ruby">-socks5-gssapi-nec  <span class="constant">Compatibility</span> with <span class="constant">NEC</span> <span class="constant">SOCKS5</span> server</span><br><span class="line"></span> -<span class="ruby"><span class="constant">Y</span>, --speed-limit <span class="constant">RATE</span>  <span class="constant">Stop</span> transfers below <span class="constant">RATE</span> <span class="keyword">for</span> <span class="string">'speed-time'</span> secs</span><br><span class="line"></span> -<span class="ruby">y, --speed-time <span class="constant">SECONDS</span>  <span class="constant">Trigger</span> <span class="string">'speed-limit'</span> abort after <span class="constant">SECONDS</span> (<span class="symbol">default:</span> <span class="number">30</span>)</span><br><span class="line"></span>     -<span class="ruby">-ssl           <span class="constant">Try</span> <span class="constant">SSL</span>/<span class="constant">TLS</span> (<span class="constant">FTP</span>, <span class="constant">IMAP</span>, <span class="constant">POP3</span>, <span class="constant">SMTP</span>)</span><br><span class="line"></span>     -<span class="ruby">-ssl-reqd      <span class="constant">Require</span> <span class="constant">SSL</span>/<span class="constant">TLS</span> (<span class="constant">FTP</span>, <span class="constant">IMAP</span>, <span class="constant">POP3</span>, <span class="constant">SMTP</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="number">2</span>, --sslv2         <span class="constant">Use</span> <span class="constant">SSLv2</span> (<span class="constant">SSL</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="number">3</span>, --sslv3         <span class="constant">Use</span> <span class="constant">SSLv3</span> (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-ssl-allow-beast  <span class="constant">Allow</span> security flaw to improve interop (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-stderr <span class="constant">FILE</span>   <span class="constant">Where</span> to redirect stderr (use <span class="string">"-"</span> <span class="keyword">for</span> stdout)</span><br><span class="line"></span>     -<span class="ruby">-tcp-nodelay   <span class="constant">Use</span> the <span class="constant">TCP_NODELAY</span> option</span><br><span class="line"></span> -<span class="ruby">t, --telnet-option <span class="constant">OPT</span>=<span class="constant">VAL</span>  <span class="constant">Set</span> telnet option</span><br><span class="line"></span>     -<span class="ruby">-tftp-blksize <span class="constant">VALUE</span>  <span class="constant">Set</span> <span class="constant">TFTP</span> <span class="constant">BLKSIZE</span> option (must be &gt;<span class="number">512</span>)</span><br><span class="line"></span> -<span class="ruby">z, --time-cond <span class="constant">TIME</span>  <span class="constant">Transfer</span> based on a time condition</span><br><span class="line"></span> -<span class="ruby"><span class="number">1</span>, --tlsv1         <span class="constant">Use</span> =&gt; <span class="constant">TLSv1</span> (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-tlsv1.<span class="number">0</span>       <span class="constant">Use</span> <span class="constant">TLSv1</span>.<span class="number">0</span> (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-tlsv1.<span class="number">1</span>       <span class="constant">Use</span> <span class="constant">TLSv1</span>.<span class="number">1</span> (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-tlsv1.<span class="number">2</span>       <span class="constant">Use</span> <span class="constant">TLSv1</span>.<span class="number">2</span> (<span class="constant">SSL</span>)</span><br><span class="line"></span>     -<span class="ruby">-trace <span class="constant">FILE</span>    <span class="constant">Write</span> a debug trace to <span class="constant">FILE</span></span><br><span class="line"></span>     -<span class="ruby">-trace-ascii <span class="constant">FILE</span>  <span class="constant">Like</span> --trace, but without hex output</span><br><span class="line"></span>     -<span class="ruby">-trace-time    <span class="constant">Add</span> time stamps to trace/verbose output</span><br><span class="line"></span>     -<span class="ruby">-tr-encoding   <span class="constant">Request</span> compressed transfer encoding (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby"><span class="constant">T</span>, --upload-file <span class="constant">FILE</span>  <span class="constant">Transfer</span> <span class="constant">FILE</span> to destination</span><br><span class="line"></span>     -<span class="ruby">-url <span class="constant">URL</span>       <span class="constant">URL</span> to work with</span><br><span class="line"></span> -<span class="ruby"><span class="constant">B</span>, --use-ascii     <span class="constant">Use</span> <span class="constant">ASCII</span>/text transfer</span><br><span class="line"></span> -<span class="ruby">u, --user <span class="constant">USER</span>[<span class="symbol">:PASSWORD</span>]  <span class="constant">Server</span> user <span class="keyword">and</span> password</span><br><span class="line"></span>     -<span class="ruby">-tlsuser <span class="constant">USER</span>  <span class="constant">TLS</span> username</span><br><span class="line"></span>     -<span class="ruby">-tlspassword <span class="constant">STRING</span>  <span class="constant">TLS</span> password</span><br><span class="line"></span>     -<span class="ruby">-tlsauthtype <span class="constant">STRING</span>  <span class="constant">TLS</span> authentication type (<span class="symbol">default:</span> <span class="constant">SRP</span>)</span><br><span class="line"></span>     -<span class="ruby">-unix-socket <span class="constant">FILE</span>    <span class="constant">Connect</span> through this <span class="constant">Unix</span> domain socket</span><br><span class="line"></span> -<span class="ruby"><span class="constant">A</span>, --user-agent <span class="constant">STRING</span>  <span class="constant">Send</span> <span class="constant">User</span>-<span class="constant">Agent</span> <span class="constant">STRING</span> to server (<span class="constant">H</span>)</span><br><span class="line"></span> -<span class="ruby">v, --verbose       <span class="constant">Make</span> the operation more talkative</span><br><span class="line"></span> -<span class="ruby"><span class="constant">V</span>, --version       <span class="constant">Show</span> version number <span class="keyword">and</span> quit</span><br><span class="line"></span> -<span class="ruby">w, --write-out <span class="constant">FORMAT</span>  <span class="constant">Use</span> output <span class="constant">FORMAT</span> after completion</span><br><span class="line"></span>     -<span class="ruby">-xattr         <span class="constant">Store</span> metadata <span class="keyword">in</span> extended file attributes</span><br><span class="line"></span> -<span class="ruby">q                  <span class="constant">Disable</span> .curlrc (must be first parameter)</span></span><br></pre></td></tr></table></figure>
<p>从参数看，我们可以使用curl访问各种网络协议，支持协议数据交互等等，我们平常用到的网络访问操作，都可以用curl命令来模拟完成。</p>
<h1 id="u5E38_u7528_u64CD_u4F5C"><a href="#u5E38_u7528_u64CD_u4F5C" class="headerlink" title="常用操作"></a>常用操作</h1><h2 id="u83B7_u53D6_u9875_u9762_u6E90_u7801"><a href="#u83B7_u53D6_u9875_u9762_u6E90_u7801" class="headerlink" title="获取页面源码"></a>获取页面源码</h2><p>可以使用:</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">http:</span><span class="comment">//website.you.want.to.capture</span></span><br></pre></td></tr></table></figure>
<p>即可把页面的源码输出到终端。另外只要加上 <code>-o filename</code> 即可把页面代码数据保存到指定的文件中。</p>
<h2 id="u4E0B_u8F7D_u6587_u4EF6"><a href="#u4E0B_u8F7D_u6587_u4EF6" class="headerlink" title="下载文件"></a>下载文件</h2><p>常见的用法为：</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O <span class="keyword">http</span>://url.cn/<span class="built_in">to</span>/<span class="built_in">file</span>/you/want/<span class="built_in">to</span>/dl.jpg</span><br></pre></td></tr></table></figure>
<p>上面的命令再加上 <code>-c</code> 即可实现 <code>断点续传</code>。</p>
<p>你还可以使用正则表达式批量下载文件：</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O <span class="link_url">http://url.cn/to/file/you/want/to/</span>[<span class="link_label">001-020</span>].jpg # &gt;like 001.jpg</span><br></pre></td></tr></table></figure>
<p>这个功能简直不要太好用</p>
<h2 id="u91CD_u5B9A_u5411"><a href="#u91CD_u5B9A_u5411" class="headerlink" title="重定向"></a>重定向</h2><p>当访问的网址有做301重定向的时候，我们使用如下的命令即可正常访问</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L <span class="string">http:</span><span class="comment">//website.will.be/redirect</span></span><br></pre></td></tr></table></figure>
<h2 id="HTTP_Header"><a href="#HTTP_Header" class="headerlink" title="HTTP Header"></a>HTTP Header</h2><ul>
<li>查看Header</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -<span class="tag">i</span> http:<span class="comment">//your.website.com</span></span><br></pre></td></tr></table></figure>
<p>另外， <code>-I</code> 则只显示Response的Header</p>
<ul>
<li>自定义Header</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --<span class="tag">header</span> <span class="string">"Content-Type:application/json"</span> http:<span class="comment">//your.website.com/api</span></span><br></pre></td></tr></table></figure>
<h2 id="u67E5_u770B_u6574_u4E2AHTTP_u901A_u4FE1_u8FC7_u7A0B"><a href="#u67E5_u770B_u6574_u4E2AHTTP_u901A_u4FE1_u8FC7_u7A0B" class="headerlink" title="查看整个HTTP通信过程"></a>查看整个HTTP通信过程</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v <span class="string">http:</span><span class="comment">//your.website.com</span></span><br></pre></td></tr></table></figure>
<h2 id="u63D0_u4EA4_u8868_u5355_u4FE1_u606F"><a href="#u63D0_u4EA4_u8868_u5355_u4FE1_u606F" class="headerlink" title="提交表单信息"></a>提交表单信息</h2><ul>
<li>GET</li>
</ul>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">http:</span><span class="comment">//api.website.com/status?hello=world</span></span><br></pre></td></tr></table></figure>
<ul>
<li>POST</li>
</ul>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 简单数据</span></span><br><span class="line">curl -X<span class="constant"> POST </span>--data <span class="string">"hello=world"</span> http:<span class="comment">//api.website.com/status</span></span><br><span class="line"><span class="preprocessor"># 复杂数据: 自动帮你encode参数</span></span><br><span class="line">curl -X<span class="constant"> POST </span>--data-urlencode <span class="string">"hello=who am i &amp;world=what the hell"</span> http:<span class="comment">//api.website.com/status</span></span><br></pre></td></tr></table></figure>
<ul>
<li>其他</li>
</ul>
<p><code>-X</code> 后面出了可以用GET/POST之外，还可以支持HTTP DELETE/PUT 等动作。</p>
<h2 id="u6587_u4EF6_u4E0A_u4F20"><a href="#u6587_u4EF6_u4E0A_u4F20" class="headerlink" title="文件上传"></a>文件上传</h2><p>假定你的Form表单是这样的：</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"<span class="keyword">POST</span>"</span> enctype='multipart/form-data' action=<span class="string">"http://your.website.com/upload"</span>&gt;</span><br><span class="line">	&lt;input type=file name=file-upload&gt;</span><br><span class="line">	&lt;input type=submit name=upload value=<span class="string">"UPLOAD"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
<p>那么你可以用如下命令提交数据：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --form <span class="keyword">file</span>-upload=@<span class="regexp">/path/</span>to<span class="regexp">/your/</span><span class="keyword">file</span><span class="regexp">/in/y</span>our<span class="regexp">/computor --form upload=UPLOAD http:/</span><span class="regexp">/your.website.com/u</span>pload</span><br></pre></td></tr></table></figure>
<h2 id="u6A21_u62DFUser-Agent"><a href="#u6A21_u62DFUser-Agent" class="headerlink" title="模拟User-Agent"></a>模拟User-Agent</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="comment">--user-agent "I am from an unknown browser.." http://your.website.com</span></span><br></pre></td></tr></table></figure>
<h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><ul>
<li>自定义Cookies</li>
</ul>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --cookie <span class="string">"hello=world"</span> <span class="string">http:</span><span class="comment">//your.website.com</span></span><br></pre></td></tr></table></figure>
<ul>
<li>服务器Cookie交互</li>
</ul>
<p>可以使用 <code>-c</code> 参数来保存服务器返回的cookie到文件，然后使用 <code>-b</code> 参数来使用保存好的cookie做后续使用</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -c cookie_filename <span class="string">http:</span><span class="comment">//your.website.com/login</span></span><br><span class="line">curl -b cookie_filename <span class="string">http:</span><span class="comment">//your.website.com/admin</span></span><br></pre></td></tr></table></figure>
<h2 id="u901A_u8FC7_u4EE3_u7406_u8BBF_u95EE"><a href="#u901A_u8FC7_u4EE3_u7406_u8BBF_u95EE" class="headerlink" title="通过代理访问"></a>通过代理访问</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -x <span class="string">proxy_server_ip:</span>proxy_server_port <span class="string">http:</span><span class="comment">//your.website.com</span></span><br></pre></td></tr></table></figure>
<h2 id="u8EAB_u4EFD_u8BA4_u8BC1"><a href="#u8EAB_u4EFD_u8BA4_u8BC1" class="headerlink" title="身份认证"></a>身份认证</h2><p>如果采用基础的HTTP认证，那么可以使用：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --user <span class="string">name:</span>password <span class="string">http:</span><span class="comment">//your.website.com</span></span><br></pre></td></tr></table></figure>
<p>来实现身份认证。</p>
<h1 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h1><p>以上说到的基本都是常见的HTTP操作，curl还可以支持FTP、SSH等协议，这里就不做进一步展开了，具体可以参照文章中的命令参数进行使用。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>curl 除了是一个强大的类库之外，curl工具本身也是一个非常强大的、方便开发人员使用的工具。</p>]]>
    
    </summary>
    
      <category term="console" scheme="http://quanken.github.io/tags/console/"/>
    
      <category term="software" scheme="http://quanken.github.io/tags/software/"/>
    
      <category term="tool" scheme="http://quanken.github.io/tags/tool/"/>
    
      <category term="software" scheme="http://quanken.github.io/categories/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Tomcat Optimization]]></title>
    <link href="http://quanken.github.io/2015/12/30/Tomcat-Optimization/"/>
    <id>http://quanken.github.io/2015/12/30/Tomcat-Optimization/</id>
    <published>2015-12-30T01:45:54.000Z</published>
    <updated>2015-12-30T06:52:48.000Z</updated>
    <content type="html"><![CDATA[<p>作为J2EE中使用率最高的几种服务容器之一，Tomcat在实际使用的时候可以通过一些配置来改善运行时的性能和安全性表现。</p>
<a id="more"></a>
<p>我们可以从 <a href="http://tomcat.apache.org/" target="_blank" rel="external">Tomcat官网</a> 中获取到最新版本的 Tomcat 安装包。</p>
<p>在实际使用中，强烈推荐服务器的操作系统使用 Linux/UNIX 64位的系统，这些系统在系统在大内存支持、灵活的权限支持、安全性等都要比Windows 服务器要来得好。</p>
<h1 id="u7EA6_u5B9A"><a href="#u7EA6_u5B9A" class="headerlink" title="约定"></a>约定</h1><ul>
<li>操作系统</li>
</ul>
<p>文章提到的操作系统，是Linux/UNIX系统, 方案的描述不保证适用于 Windows 系统</p>
<ul>
<li>JDK </li>
</ul>
<p>文章中提到的 JDK 为 OpenJDK / Oracle JDK 1.7</p>
<h1 id="u6587_u7AE0_u7ED3_u6784"><a href="#u6587_u7AE0_u7ED3_u6784" class="headerlink" title="文章结构"></a>文章结构</h1><p>Tomcat 是一个J2EE 容器，它必须要运行在 JVM 上，因此，JVM的性能调优会直接影响到Tomcat整体性能表现, <code>JVM</code> 一节将展开说明一些基础的JVM调优方案。</p>
<p>Tomcat 作为容器，可以部署应用到它内部，并把应用运行对外提供内容服务，因此，容器本身的性能调优，也是非常关键的，<code>Tomcat</code> 一节将展开说明基础的Tomcat调优方案。</p>
<p>Tomcat 作为容器，在对外提供服务的时候，也会面对很多来自外部的威胁，<code>安全优化</code> 一节将展开说明基础的安全调优方案。</p>
<h1 id="JVM__u8C03_u4F18"><a href="#JVM__u8C03_u4F18" class="headerlink" title="JVM 调优"></a>JVM 调优</h1><p>JVM 是 所有Java程序的根基，编译好的java程序其实就是一堆在JVM中可以运行的JVM指令，JVM解析这些指令然后把它们转化成为操作系统中相应的机器指令并执行。</p>
<p>在这个过程中，JVM中特定的堆、栈、对象生命周期管理体系、JVM本身的数据吞吐量等节点，都是可以着手优化的点。</p>
<p>更详细的内容可以参考：</p>
<p><a href="http://www.ibm.com/developerworks/cn/java/j-lo-jvm-optimize-experience/index.html" target="_blank" rel="external">JVM 优化经验总结</a><br><a href="http://wenku.baidu.com/link?url=I4TTL0Ca3ApfKL6pLpOk4EqNy_LJ8q9QZa_Vc5razW_wDqCVb7CDSBgBx24F8rdcn24UdiZg0vrD0lK9p7Upwqm74rZPR7zY5gCIcx5g_PO" target="_blank" rel="external">JVM调优总结</a><br><a href="http://www.javaworld.com/article/2078623/core-java/jvm-performance-optimization-part-1-a-jvm-technology-primer.html" target="_blank" rel="external">JVM performance optimization, Part 1: A JVM technology primer</a></p>
<p>Tomcat 是运行在 JVM 中的，我们通过java命令来启动/停止/管理整个应用服务，只是这些命令都已经被封装成了一个个批处理脚本文件，方便开发者使用。</p>
<p>因此，我们要对Tomcat运行的JVM进行调优，可以把上面提到的调优内容直接放到Tomcat的执行脚本中（tomcat的脚本都放在 <code>bin</code> 目录 ）。</p>
<p>Tomcat 自身有一套机制来给我们自定义启动脚本的参数</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Environment Variable Prerequisites</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Do not set the variables in this script. Instead put them into a script</span></span><br><span class="line"><span class="comment">#   setenv.sh in CATALINA_BASE/bin to keep your customizations separate.</span></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>因此我们可以把调优的配置放到 <code>bin/setenv.sh</code> 中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_OPTS=<span class="string">"-server -Xms1400M -Xmx1400M -Xss512k -XX:+AggressiveOpts -XX:+UseBiasedLocking -XX:PermSize=128M -XX:MaxPermSize=256M -XX:+DisableExplicitGC -XX:MaxTenuringThreshold=31 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC  -XX:+CMSParallelRemarkEnabled -XX:+UseCMSCompactAtFullCollection -XX:LargePageSizeInBytes=128m  -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -Djava.awt.headless=true "</span></span><br></pre></td></tr></table></figure>
<h1 id="Tomcat__u8C03_u4F18"><a href="#Tomcat__u8C03_u4F18" class="headerlink" title="Tomcat 调优"></a>Tomcat 调优</h1><h2 id="u8FDE_u63A5_u4F18_u5316"><a href="#u8FDE_u63A5_u4F18_u5316" class="headerlink" title="连接优化"></a>连接优化</h2><p>这里先给出优化后的配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=<span class="string">"8080"</span> protocol=<span class="string">"HTTP/1.1"</span></span><br><span class="line">	URIEncoding=<span class="string">"UTF-8"</span></span><br><span class="line">	redirectPort=<span class="string">"8443"</span> </span><br><span class="line">	maxThreads=<span class="string">"8192"</span></span><br><span class="line">	minSpareThreads=<span class="string">"64"</span></span><br><span class="line">	maxSpareThreads=<span class="string">"128"</span></span><br><span class="line">	acceptCount=<span class="string">"300"</span></span><br><span class="line">	<span class="built_in">enable</span>Lookups=<span class="string">"false"</span></span><br><span class="line">	<span class="built_in">disable</span>UploadTimeout=<span class="string">"true"</span></span><br><span class="line">	connectionTimeout=<span class="string">"20000"</span></span><br><span class="line">	maxProcessors=<span class="string">"1000"</span></span><br><span class="line">	minProcessors=<span class="string">"5"</span></span><br><span class="line">	useURIValidationHack=<span class="string">"false"</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure>
<p>其中：</p>
<ul>
<li>URIEncoding=”UTF-8”</li>
</ul>
<p>确保Tomcat处理含中文的URI不会出现编码错误问题</p>
<ul>
<li>maxThreads=”8192”</li>
</ul>
<p>Tomcat使用线程来处理接收的每个请求。这个值表示Tomcat可创建的最大的线程数，即最大并发数</p>
<ul>
<li>minSpareThreads=”64”</li>
</ul>
<p>最小备用线程数，tomcat启动时的初始化的线程数。</p>
<ul>
<li>maxSpareThreads=”128”</li>
</ul>
<p>如果空闲状态的线程数多于设置的数目，则将这些线程中止，减少这个池中的线程总数。</p>
<ul>
<li>acceptCount=”300”</li>
</ul>
<p>当线程数达到maxThreads后，后续请求会被放入一个等待队列，这个acceptCount是这个队列的大小，如果这个队列也满了，就直接refuse connection</p>
<ul>
<li>enableLookups=”false”</li>
</ul>
<p>当web应用程序向要记录客户端的信息时，它也会记录客户端的IP地址或者通过域名服务器查找机器名 转换为IP地址。<br>DNS查询需要占用网络，并且包括可能从很多很远的服务器或者不起作用的服务器上去获取对应的IP的过程，这样会消耗一定的时间。<br>如果为true，则可以通过调用request.getRemoteHost()进行DNS查询来得到远程客户端的实际主机名，若为false则不进行DNS查询，而是返回其ip地址</p>
<ul>
<li>disableUploadTimeout=”true”</li>
</ul>
<p>Keep Alive</p>
<ul>
<li>connectionTimeout=”20000”</li>
</ul>
<p>连接超时时间</p>
<ul>
<li>maxProcessors=”1000”</li>
<li>minProcessors=”5”</li>
</ul>
<p>并发处理连接数</p>
<ul>
<li>useURIValidationHack=”false”</li>
</ul>
<p>减少对URI进行的不必要的验证</p>
<p><strong>特别注意:</strong></p>
<ul>
<li>为了确保性能，静态资源请尽可能的使用诸如Apache Httpd/Nginx等前端服务器提供服务，Tomcat只负责动态程序逻辑。</li>
<li>数据的压缩，同样尽可能用Apache Httpd/Nginx等服务器软件完成，尽可能不要在Tomcat的连接中配置数据压缩。</li>
</ul>
<h2 id="u6027_u80FD_u63D0_u9AD8"><a href="#u6027_u80FD_u63D0_u9AD8" class="headerlink" title="性能提高"></a>性能提高</h2><p>Tomcat支持通过 <code>Apache Tomcat Native Library</code> 来优化IO/SSL等特性的性能。</p>
<p>具体的说明和配置方法参照 <a href="https://tomcat.apache.org/native-doc/" target="_blank" rel="external">官方文档</a></p>
<h2 id="u5B89_u5168_u6027_u914D_u7F6E"><a href="#u5B89_u5168_u6027_u914D_u7F6E" class="headerlink" title="安全性配置"></a>安全性配置</h2><ul>
<li>默认项目</li>
</ul>
<p>直接移除 webapps 下面自带的所有项目</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rm</span> -rf apache-tomcat-&#123;<span class="keyword">version</span>&#125;/webapps<span class="comment">/*</span></span><br></pre></td></tr></table></figure>
<ul>
<li>管理用户</li>
</ul>
<p>移除或者注释所有tomcat管理用户账户</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat conf/tomcat-users.xml</span><br><span class="line"><span class="pi">&lt;?xml version='1.0' encoding='utf-8'?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">tomcat-users</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">tomcat-users</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注: 在新版本的Tomcat中，默认所有的账号都被注释掉了，因此这步可以不做。</p>
<ul>
<li>隐藏服务器信息</li>
</ul>
<p>在<code>conf/server.xml</code> 的 Connector 配置中加入</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connect<span class="subst">or</span> port=<span class="string">"8080"</span> protocol=<span class="string">"HTTP/1.1"</span></span><br><span class="line">	<span class="attribute">...</span></span><br><span class="line">	server=<span class="string">"App Srv 1.0"</span></span><br><span class="line">	<span class="attribute">...</span>/&gt;</span><br></pre></td></tr></table></figure>
<p>启动 tomcat 后用curl访问可以看到：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ curl -I http:<span class="comment">//localhost:8080/</span></span><br><span class="line">HTTP/<span class="number">1.1</span> <span class="number">400</span> Bad Request</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Date: Thu, <span class="number">20</span> Dec <span class="number">2015</span> <span class="number">09</span>:<span class="number">51</span>:<span class="number">55</span> GMT</span><br><span class="line">Connection: close</span><br><span class="line">Server: App Srv <span class="number">1.0</span></span><br></pre></td></tr></table></figure>
<ul>
<li>应用部署安全</li>
</ul>
<p>关闭应用的自动部署和重新加载</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="setting">unpackWARs=<span class="value"><span class="string">"false"</span> </span></span></span><br><span class="line"><span class="setting">autoDeploy=<span class="value"><span class="string">"false"</span></span></span></span><br><span class="line"><span class="setting">reloadable=<span class="value"><span class="string">"false"</span></span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>运行账号</li>
</ul>
<p>切记不要用 root 账号来运行tomcat服务，不然tomcat中运行的应用将拥有管理员的权限，对于操作系统的安全而言，是非常大的隐患。</p>
<p>可以使用daemon账号来运行tomcat，同时另外设置tomcat部署应用的账号为 tomcat， 这样，哪怕tomcat被黑，黑客也没有足够的权限来完成提权的操作。</p>
<p>最后，服务的运行和管理的账号，shell可以全部设置为 /sbin/nologin，这样也可以确保哪怕账号泄露了，黑客也没法使用此账号登录你的服务器。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>作为J2EE中使用率最高的几种服务容器之一，Tomcat在实际使用的时候可以通过一些配置来改善运行时的性能和安全性表现。</p>]]>
    
    </summary>
    
      <category term="opensource" scheme="http://quanken.github.io/tags/opensource/"/>
    
      <category term="software" scheme="http://quanken.github.io/tags/software/"/>
    
      <category term="software" scheme="http://quanken.github.io/categories/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[DNSPod Security Recursive DNS Server]]></title>
    <link href="http://quanken.github.io/2015/12/29/DNSPod-Security-Recursive-DNS-Server/"/>
    <id>http://quanken.github.io/2015/12/29/DNSPod-Security-Recursive-DNS-Server/</id>
    <published>2015-12-29T10:11:49.000Z</published>
    <updated>2015-12-29T11:53:07.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u4ECB_u7ECD"><a href="#u4ECB_u7ECD" class="headerlink" title="介绍"></a>介绍</h1><p>dnspod-sr 是递归 DNS 程序，功能类似于 BIND ，但是性能较 BIND 高出数倍。可以通过架设 dnspod-sr 集群，替换各大运营商目前基于 BIND 的陈旧方案，减少运营成本；也可以用于公司、学校、政府等组织内部 DNS，解析外部不可见的私有域名，提高上网速度。其中的基础模块也可以在其他项目上使用。</p>
<a id="more"></a>
<h1 id="u7279_u6027"><a href="#u7279_u6027" class="headerlink" title="特性"></a>特性</h1><ul>
<li>软件性能高出2倍以上</li>
<li>安全，能抵御一般攻击</li>
<li>稳定，有效降低解析失败率</li>
<li>主动刷新缓存，响应速度更快</li>
<li>易于扩展，非常容易部署</li>
<li>防污染，能够正确解析被污染域名</li>
</ul>
<h1 id="u5B89_u88C5"><a href="#u5B89_u88C5" class="headerlink" title="安装"></a>安装</h1><h2 id="u83B7_u53D6_u6E90_u4EE3_u7801"><a href="#u83B7_u53D6_u6E90_u4EE3_u7801" class="headerlink" title="获取源代码"></a>获取源代码</h2><ul>
<li>直接同步代码仓库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/DNSPod/dnspod-sr.git</span><br></pre></td></tr></table></figure>
<ul>
<li>直接下载压缩包</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://github.com/DNSPod/dnspod-sr/zipball/master</span><br><span class="line">$ unzip master</span><br></pre></td></tr></table></figure>
<h2 id="u7F16_u8BD1"><a href="#u7F16_u8BD1" class="headerlink" title="编译"></a>编译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> dnspod-sr/src</span><br><span class="line">$ make</span><br></pre></td></tr></table></figure>
<h2 id="u8FD0_u884C"><a href="#u8FD0_u884C" class="headerlink" title="运行"></a>运行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 确保是在dnspod-sr/src目录下面</span></span><br><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/path/to/dnspod-sr/src</span><br><span class="line"><span class="comment"># 用root权限运行服务</span></span><br><span class="line">$ sudo ./dnspod-sr</span><br></pre></td></tr></table></figure>
<h2 id="u8F85_u52A9_u6D4B_u8BD5_u5DE5_u5177"><a href="#u8F85_u52A9_u6D4B_u8BD5_u5DE5_u5177" class="headerlink" title="辅助测试工具"></a>辅助测试工具</h2><p>推荐使用 <code>dig</code> 对解析记录进行</p>
<p>在CentOS中，dig工具属于 <code>bind-utils</code> 包，只需要安装 bind-utils 即可。</p>
<p>安装命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install -y <span class="built_in">bind</span>-utils</span><br></pre></td></tr></table></figure>
<h1 id="u914D_u7F6E"><a href="#u914D_u7F6E" class="headerlink" title="配置"></a>配置</h1><h2 id="u8F6C_u53D1_u3001_u7F13_u5B58DNS_u670D_u52A1"><a href="#u8F6C_u53D1_u3001_u7F13_u5B58DNS_u670D_u52A1" class="headerlink" title="转发、缓存DNS服务"></a>转发、缓存DNS服务</h2><p>无需额外配置，直接运行即可</p>
<h2 id="u79C1_u6709_u89E3_u6790_u670D_u52A1_u5668"><a href="#u79C1_u6709_u89E3_u6790_u670D_u52A1_u5668" class="headerlink" title="私有解析服务器"></a>私有解析服务器</h2><ul>
<li>解析配置文件</li>
</ul>
<p>具体的解析配置文件为<code>dnspod-sr/root.z</code></p>
<p>考虑自定义的解析与权威解析之间的冲突，可以直接在 <code>root.z</code> 最开始部分直接新增解析。</p>
<p>文章假定我们要自己解析 <code>www.quanken.com</code> 与 <code>git.quanken.com</code> 两个域名</p>
<ul>
<li>新增NS记录</li>
</ul>
<p>先新增顶级与二级域名的NS记录</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">quanken<span class="class">.com</span>. <span class="number">172800</span> IN NS www<span class="class">.quanken</span><span class="class">.com</span>.</span><br><span class="line">quanken<span class="class">.com</span>. <span class="number">172800</span> IN NS git<span class="class">.quanken</span><span class="class">.com</span>.</span><br></pre></td></tr></table></figure>
<ul>
<li>新增A记录</li>
</ul>
<p>然后新增二级域名的解析A记录</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">www</span><span class="class">.quanken</span><span class="class">.com</span>. 172800 <span class="tag">IN</span> <span class="tag">A</span> 192<span class="class">.168</span><span class="class">.1</span><span class="class">.101</span></span><br><span class="line"><span class="tag">git</span><span class="class">.quanken</span><span class="class">.com</span>. 172800 <span class="tag">IN</span> <span class="tag">A</span> 192<span class="class">.168</span><span class="class">.1</span><span class="class">.102</span></span><br></pre></td></tr></table></figure>
<p>注意： 如果是最后一行记录，记得确保再新增一行空行</p>
<ul>
<li>测试</li>
</ul>
<p>保存好记录后, 重新启动解析服务即可生效。</p>
<p>然后使用 <code>dig @dnspod-sr.server.ip www.quanken.com</code> 即可获得解析结果</p>
<p>例子：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ dig @<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> git.quanken.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG <span class="number">9.8</span><span class="number">.3</span>-P1 &lt;&lt;&gt;&gt; @<span class="number">132.97</span><span class="number">.186</span><span class="number">.116</span> git.quanken.com</span><br><span class="line">; (<span class="number">1</span> server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: <span class="number">37704</span></span><br><span class="line">;; flags: qr ra; QUERY: <span class="number">1</span>, ANSWER: <span class="number">1</span>, AUTHORITY: <span class="number">0</span>, ADDITIONAL: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;git.quanken.com.		IN	A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">git.quanken.com.	<span class="number">604800</span>	IN	A	<span class="number">192.168</span><span class="number">.1</span><span class="number">.102</span></span><br><span class="line"></span><br><span class="line">;; Query time: <span class="number">7</span> msec</span><br><span class="line">;; SERVER: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="preprocessor">#<span class="number">53</span>(<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>)</span></span><br><span class="line">;; WHEN: Tue Dec <span class="number">29</span> <span class="number">19</span>:<span class="number">47</span>:<span class="number">26</span> <span class="number">2015</span></span><br></pre></td></tr></table></figure>
<p>我们可以看到，<code>git.quanken.com</code> 已经解析到 <code>192.168.1.102</code> 了</p>
<h1 id="u4F7F_u7528"><a href="#u4F7F_u7528" class="headerlink" title="使用"></a>使用</h1><p>在操作系统网络配置里面，把域名解析服务器指到私有的域名解析服务器，就可以实现私有域名解析了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u4ECB_u7ECD"><a href="#u4ECB_u7ECD" class="headerlink" title="介绍"></a>介绍</h1><p>dnspod-sr 是递归 DNS 程序，功能类似于 BIND ，但是性能较 BIND 高出数倍。可以通过架设 dnspod-sr 集群，替换各大运营商目前基于 BIND 的陈旧方案，减少运营成本；也可以用于公司、学校、政府等组织内部 DNS，解析外部不可见的私有域名，提高上网速度。其中的基础模块也可以在其他项目上使用。</p>]]>
    
    </summary>
    
      <category term="opensource" scheme="http://quanken.github.io/tags/opensource/"/>
    
      <category term="software" scheme="http://quanken.github.io/tags/software/"/>
    
      <category term="software" scheme="http://quanken.github.io/categories/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Image Optimizor]]></title>
    <link href="http://quanken.github.io/2015/12/26/Android-Image-Optimizor/"/>
    <id>http://quanken.github.io/2015/12/26/Android-Image-Optimizor/</id>
    <published>2015-12-26T11:59:05.000Z</published>
    <updated>2015-12-28T06:59:39.000Z</updated>
    <content type="html"><![CDATA[<p>When you building your app from source to the final signed and aligned apk, you have to package assert files including images etc using <code>AAPT</code> (Android Assert Package Tool).</p>
<a id="more"></a>
<p>If you are using </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Android Build Tool <span class="number">21</span>+</span><br><span class="line">libpng <span class="number">1.6</span>+</span><br><span class="line">Gradle <span class="number">2.</span>x</span><br></pre></td></tr></table></figure>
<p>to build your project, you may meet up with this :</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">AAPT:</span> <span class="regexp">/path/</span>to<span class="regexp">/project/</span>src<span class="regexp">/main/</span>res<span class="regexp">/drawable/</span>xxx.<span class="string">png:</span> libpng <span class="string">warning:</span> <span class="string">iCCP:</span> Not recognizing known sRGB profile that has been edited</span><br></pre></td></tr></table></figure>
<p>You may work around it with one or more of the following solution :</p>
<ul>
<li><p>Use a PNG editor to remove the iCCP chunk from the PNG files listed in the error report</p>
<p>e.g. : </p>
</li>
</ul>
<ol>
<li><p>with ImageMagick’s “convert -define png:exclude-chunk=iCCP,zCCP”</p>
</li>
<li><p>with ImageOptim to drag image with warning to be optimized<br>you can get it from <a href="https://imageoptim.com" target="_blank" rel="external">here</a><br>I strongly suggest you to use <code>ImageOptim</code> to dual with them.</p>
</li>
</ol>
<ul>
<li><p>Use a PNG editor to remove all ancillary chunks, e.g., convert -strip</p>
</li>
<li><p>Downgrade your libpng to version 1.5.x (currently libpng-1.5.23)</p>
</li>
<li><p>Reinstall libpng-1.6.x (currently libpng-1.6.17) with “-DPNG_sRGB_PROFILE_CHECKS=-1”</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>When you building your app from source to the final signed and aligned apk, you have to package assert files including images etc using <code>AAPT</code> (Android Assert Package Tool).</p>]]>
    
    </summary>
    
      <category term="android" scheme="http://quanken.github.io/tags/android/"/>
    
      <category term="software" scheme="http://quanken.github.io/tags/software/"/>
    
      <category term="tool" scheme="http://quanken.github.io/tags/tool/"/>
    
      <category term="android" scheme="http://quanken.github.io/categories/android/"/>
    
      <category term="software" scheme="http://quanken.github.io/categories/android/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SpringMVC i18n]]></title>
    <link href="http://quanken.github.io/2015/12/04/SpringMVC-i18n/"/>
    <id>http://quanken.github.io/2015/12/04/SpringMVC-i18n/</id>
    <published>2015-12-04T07:10:26.000Z</published>
    <updated>2015-12-28T06:59:39.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h1><p>i18n with spring is quite easy</p>
<p>This post is to show you a simplest spring i18n demo with gradle and groovy.</p>
<a id="more"></a>
<h1 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h1><p>I assume that you already have :</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JDK <span class="number">1.7</span>+</span><br><span class="line">Gradle <span class="number">2.1</span>+</span><br><span class="line">Tomcat <span class="number">7</span>+</span><br></pre></td></tr></table></figure>
<h1 id="Project_Structure"><a href="#Project_Structure" class="headerlink" title="Project Structure"></a>Project Structure</h1><ul>
<li>src/main/groovy</li>
</ul>
<p>source code</p>
<ul>
<li>src/main/resources/i18n</li>
</ul>
<p>message resource folder</p>
<ul>
<li>src/main/webapp</li>
</ul>
<p>web page folder</p>
<h1 id="Build_Script"><a href="#Build_Script" class="headerlink" title="Build Script"></a>Build Script</h1><figure class="highlight groovy"><figcaption><span>build.gradle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">'groovy'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'idea'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'war'</span></span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">	mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">	compile <span class="string">'com.google.code.gson:gson:2.5'</span></span><br><span class="line">	compile <span class="string">'org.codehaus.groovy:groovy-all:2.4.5'</span></span><br><span class="line">	compile <span class="string">'org.springframework.boot:spring-boot-starter-web:1.2.2.RELEASE'</span></span><br><span class="line">	compile <span class="string">'jstl:jstl:1.2'</span></span><br><span class="line"></span><br><span class="line">	providedCompile <span class="string">'org.springframework.boot:spring-boot-starter-tomcat:1.2.2.RELEASE'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Core_Sources"><a href="#Core_Sources" class="headerlink" title="Core Sources"></a>Core Sources</h1><p>TODO</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h1><p>i18n with spring is quite easy</p>
<p>This post is to show you a simplest spring i18n demo with gradle and groovy.</p>]]>
    
    </summary>
    
      <category term="gradle" scheme="http://quanken.github.io/tags/gradle/"/>
    
      <category term="groovy" scheme="http://quanken.github.io/tags/groovy/"/>
    
      <category term="java" scheme="http://quanken.github.io/tags/java/"/>
    
      <category term="spring" scheme="http://quanken.github.io/tags/spring/"/>
    
      <category term="coding" scheme="http://quanken.github.io/categories/coding/"/>
    
      <category term="demo" scheme="http://quanken.github.io/categories/coding/demo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MacOSX EI Capitan : enable NTFS disk R/W by ntfs-3g]]></title>
    <link href="http://quanken.github.io/2015/11/10/MacOSX-EI-Capitan-enable-NTFS-disk-R-W-by-ntfs-3g/"/>
    <id>http://quanken.github.io/2015/11/10/MacOSX-EI-Capitan-enable-NTFS-disk-R-W-by-ntfs-3g/</id>
    <published>2015-11-10T06:21:34.000Z</published>
    <updated>2015-12-28T06:59:39.000Z</updated>
    <content type="html"><![CDATA[<p>NTFS format disk was default not writable under macosx.</p>
<p>This guide is to show you how to enable ntfs disk read/write in macosx with <code>ntfs-3g</code>.</p>
<a id="more"></a>
<!--toc-->
<h1 id="osxfuse"><a href="#osxfuse" class="headerlink" title="osxfuse"></a>osxfuse</h1><p>Install or Update <code>osxfuse</code> using <code>osxfuse-{3.x.x}.dmg</code> </p>
<p>download link: <a href="https://github.com/osxfuse/osxfuse/releases" target="_blank" rel="external">osxfuse github release page</a></p>
<h1 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h1><p>Install Homebrew:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby <span class="operator">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure></p>
<p>After installation, update homebrew formula using:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br></pre></td></tr></table></figure>
<h1 id="ntfs-3g"><a href="#ntfs-3g" class="headerlink" title="ntfs-3g"></a>ntfs-3g</h1><p>Install <code>ntfs-3g</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install homebrew/fuse/ntfs-<span class="number">3</span>g</span><br></pre></td></tr></table></figure>
<h1 id="System_Configuration"><a href="#System_Configuration" class="headerlink" title="System Configuration"></a>System Configuration</h1><p>OSX 10.11 (El Capitan) must temporary disable <code>System Integrity Protection</code><br>to avoid “Operation Not Permitted” error when operating files in /sbin.</p>
<ul>
<li>reboot in recovery mode to disable <code>SIP</code></li>
</ul>
<p>reboot by holding CMD+R to get in recovery mode</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csrutil <span class="built_in">disable</span></span><br></pre></td></tr></table></figure>
<ul>
<li>replace mount_ntfs in /sbin</li>
</ul>
<p>reboot normally from recovery mode</p>
<p>After booted in system, create a symlink for <code>mount_ntfs</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /sbin/mount_ntfs /sbin/mount_ntfs.original </span><br><span class="line">sudo ln <span class="operator">-s</span> /usr/<span class="built_in">local</span>/sbin/mount_ntfs /sbin/mount_ntfs</span><br></pre></td></tr></table></figure>
<ul>
<li>re-enable <code>SIP</code></li>
</ul>
<p>Just reboot by holding CMD+R to get in recovery mode, re-enable System Integrity Protection using:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csrutil <span class="built_in">enable</span></span><br></pre></td></tr></table></figure></p>
<p>Finally, reboot your machine, and your NTFS disk should be writable now. </p>
<p>Enjoy it :)</p>
<blockquote>
<p>Based on: </p>
<p>  <a href="http://apple.stackexchange.com/questions/20889/how-do-i-write-to-ntfs-drives-in-os-x/213575#213575" target="_blank" rel="external">http://apple.stackexchange.com/questions/20889/how-do-i-write-to-ntfs-drives-in-os-x/213575#213575</a><br>  <a href="https://gist.github.com/Coeur/86a18b646a3b78930cf3" target="_blank" rel="external">https://gist.github.com/Coeur/86a18b646a3b78930cf3</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>NTFS format disk was default not writable under macosx.</p>
<p>This guide is to show you how to enable ntfs disk read/write in macosx with <code>ntfs-3g</code>.</p>]]>
    
    </summary>
    
      <category term="macosx" scheme="http://quanken.github.io/tags/macosx/"/>
    
      <category term="macosx" scheme="http://quanken.github.io/categories/macosx/"/>
    
  </entry>
  
</feed>
